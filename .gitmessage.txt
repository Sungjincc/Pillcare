# <타입>: <제목> 형식으로 작성하며 제목은 최대 50글자 정도로만 입력
# 제목을 아랫줄에 작성, 제목 끝에 마침표 금지, 무엇을 했는지 명확하게 작성

# 예시:
# Feat: 알림 예약 기능 구현
# Fix: 시간 선택 시 앱 크래시 버그 수정
# Design: 로그인 화면 UI 수정
# Refactor: 알림 설정 로직 분리 및 정리
# Style: 코드 정리 및 불필요한 공백 제거

# 본문(추가 설명)을 아랫줄에 작성
# 본문 내용은 제목으로부터 엔터 두 번하고 작성

# 예시:
# 알림 예약 기능을 위해 AlarmManager와 BroadcastReceiver 연동함.
# 사용자 설정 기반으로 알림이 정확히 울리도록 개선함.

# 꼬릿말(footer)을 아랫줄에 작성 (관련된 이슈 번호 등 추가)

# 예시:
# Refs: #23
# Resolves: #45

# 타입 종류:
# Feat: 새로운 기능을 추가할 경우
# Fix: 버그를 고친 경우
# Design: XML등 사용자 UI 디자인 변경
# !HOTFIX: 급하게 치명적인 버그를 고쳐야하는 경우
# Style: 코드 포맷 변경, 세미콜론 누락, 코드 수정이 없는 경우
# Refactor: 프로덕션 코드 리팩토링
# Comment: 필요한 주석 추가 및 변경
# Docs: 문서를 수정한 경우
# Test: 테스트 추가, 테스트 리팩토링(프로덕션 코드 변경 X)
# Rename: 파일 혹은 폴더명을 수정하거나 옮기는 작업만인 경우
# Remove: 파일을 삭제하는 작업만 수행한 경우